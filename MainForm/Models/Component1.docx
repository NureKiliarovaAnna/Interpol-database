using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Interpol.Models
{
    public partial class Criminal : Component
    {
        public Criminal()
        {
            InitializeComponent();
        }

        public Criminal(IContainer container)
        {
            container.Add(this);
            InitializeComponent();
        }

        public string LastName { get; set; }
        public string FirstName { get; set; }
        public string Nickname { get; set; }
        public int Height { get; set; }
        public string HairColor { get; set; }
        public string EyeColor { get; set; }
        public string SpecialFeatures { get; set; }
        public string Nationality { get; set; }
        public DateTime DateOfBirth { get; set; }
        public string PlaceOfBirth { get; set; }
        public string LastResidence { get; set; }
        public string LanguageSkills { get; set; }
        public string CriminalProfession { get; set; }
        public string LastCase { get; set; }
        public bool IsArchived { get; set; }
        public bool IsDeceased { get; set; }
    }

    public partial class CriminalDatabase : Component
    {
        private List<Criminal> criminals = new List<Criminal>();

        public CriminalDatabase()
        {
            InitializeComponent();
        }

        public CriminalDatabase(IContainer container)
        {
            container.Add(this);
            InitializeComponent();
        }

        public void AddCriminal(Criminal criminal) => criminals.Add(criminal);

        public void EditCriminal(int index, Criminal criminal) => criminals[index] = criminal;

        public void ArchiveCriminal(int index) => criminals[index].IsArchived = true;

        public void DeleteCriminal(int index)
        {
            if (criminals[index].IsDeceased)
            {
                criminals.RemoveAt(index);
            }
        }

        public List<Criminal> GetCriminals(bool includeArchived = false)
        {
            return includeArchived ? criminals : criminals.Where(c => !c.IsArchived).ToList();
        }

        public List<Criminal> SearchCriminals(Func<Criminal, bool> predicate)
        {
            return criminals.Where(predicate).ToList();
        }
    }
}